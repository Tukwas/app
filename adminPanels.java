package quizapplication;

//importing packages/statements....
import java.awt.Font;
import java.io.File;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.Timer;
import java.util.TimerTask;
import static quizapplication.log.uname;

public class adminPanels extends javax.swing.JFrame {

    private DefaultTableModel tableModel;
    private DefaultTableModel quizTableModel;
    private static final String quizfile = "C:\\Users\\User\\Documents\\NetBeansProjects\\quizApplication\\src\\quizapplication\\quiz.json";
    private static final String FILEPATH = "C:\\Users\\User\\Documents\\NetBeansProjects\\quizApplication\\src\\quizapplication\\chat.json";
    private volatile boolean timerRunning = false; // Thread-safe variable for the timer
    private int countdownMinutes = 1; // Set initial countdown time (minutes)
    private int countdownSeconds = 0; // Set initial countdown time (seconds)
    private Timer timer;
    private Timer messageUpdateTimer;
    private int lastDisplayedMessageCount = 0;
    private boolean isQuizFinalized = false;

    public adminPanels() {
        initializeModels();
        initComponents();
        loadQuizData();

// Load past messages
        }
    

    public adminPanels(String msg) {
        initComponents();
        try {
            File fontStyle = new File("C:\\Users\\User\\Documents\\NetBeansProjects\\quizApplication\\test\\fonts\\Heiback - PERSONAL USE ONLY.ttf");
            Font fo = Font.createFont(Font.TRUETYPE_FONT, fontStyle).deriveFont(30f);
            niknim.setFont(fo);
        } catch (Exception e) {
            e.printStackTrace();
        }
        niknim.setText(msg);

        tableModel = new DefaultTableModel(new Object[][]{}, new String[]{"Sender", "Message"});
        chats.setModel(tableModel);
        // Load past data or quiz
        loadQuizData();

        loadMessages();
        startMessageUpdater();
        // Initialize the table model

        create1.addActionListener(e -> saveQuizData());
    }
    private void initializeModels() {
        // Initialize chat table model
     

     quizTableModel = new DefaultTableModel(new Object[][] {}, new String[] { "Category", "Question", "Answer", "Points" });
        createQuiz.setModel(quizTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jFrame1 = new javax.swing.JFrame();
        keeptoo.KGradientPanel kGradientPanel4 = new keeptoo.KGradientPanel();
        kGradientPanel5 = new keeptoo.KGradientPanel();
        profile1 = new javax.swing.JPanel();
        niknim1 = new javax.swing.JLabel();
        javax.swing.JLabel pro1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        exit1 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        cre1 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        dashboard1 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        acountaccess1 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        message1 = new javax.swing.JButton();
        pnlcard1 = new keeptoo.KGradientPanel();
        panel8 = new keeptoo.KGradientPanel();
        panel6 = new keeptoo.KGradientPanel();
        Create1 = new keeptoo.KGradientPanel();
        kGradientPanel6 = new keeptoo.KGradientPanel();
        jLabel4 = new javax.swing.JLabel();
        minute1 = new javax.swing.JTextField();
        second1 = new javax.swing.JTextField();
        start1 = new javax.swing.JButton();
        stop1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        createQuiz1 = new javax.swing.JTable();
        studentProg1 = new javax.swing.JProgressBar();
        add1 = new javax.swing.JButton();
        save1 = new javax.swing.JButton();
        del3 = new javax.swing.JButton();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        searchques1 = new javax.swing.JTextField();
        find3 = new javax.swing.JButton();
        mes1 = new keeptoo.KGradientPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        send1 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        chats1 = new javax.swing.JTable();
        delete1 = new javax.swing.JButton();
        find1 = new javax.swing.JTextField();
        search1 = new javax.swing.JButton();
        keeptoo.KGradientPanel kGradientPanel1 = new keeptoo.KGradientPanel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        profile = new javax.swing.JPanel();
        niknim = new javax.swing.JLabel();
        javax.swing.JLabel pro = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        exit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        cre = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        dashboard = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        acountaccess = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        message = new javax.swing.JButton();
        pnlcard = new keeptoo.KGradientPanel();
        panel7 = new keeptoo.KGradientPanel();
        panel5 = new keeptoo.KGradientPanel();
        Create = new keeptoo.KGradientPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        jLabel2 = new javax.swing.JLabel();
        minute = new javax.swing.JTextField();
        second = new javax.swing.JTextField();
        start = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        createQuiz = new javax.swing.JTable();
        studentProg = new javax.swing.JProgressBar();
        add = new javax.swing.JButton();
        finalize = new javax.swing.JButton();
        del2 = new javax.swing.JButton();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        searchques = new javax.swing.JTextField();
        find2 = new javax.swing.JButton();
        create1 = new javax.swing.JButton();
        mes = new keeptoo.KGradientPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        send = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        chats = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        find = new javax.swing.JTextField();
        search = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jLabel7.setText("jLabel7");

        jTextField1.setText("jTextField1");

        jRadioButton1.setText("jRadioButton1");

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jFrame1.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                jFrame1formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                jFrame1formWindowOpened(evt);
            }
        });

        kGradientPanel4.setBackground(new java.awt.Color(0, 153, 153));
        kGradientPanel4.setkEndColor(new java.awt.Color(206, 92, 165));
        kGradientPanel4.setkStartColor(new java.awt.Color(240, 122, 46));

        kGradientPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        kGradientPanel5.setkEndColor(new java.awt.Color(206, 92, 165));
        kGradientPanel5.setkStartColor(new java.awt.Color(29, 0, 71));

        profile1.setBackground(new java.awt.Color(127, 51, 123));
        profile1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        niknim1.setForeground(new java.awt.Color(255, 255, 255));
        niknim1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        niknim1.setText("username");
        niknim1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                niknim1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        pro1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pro1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quizapplication/profile.gif"))); // NOI18N

        javax.swing.GroupLayout profile1Layout = new javax.swing.GroupLayout(profile1);
        profile1.setLayout(profile1Layout);
        profile1Layout.setHorizontalGroup(
            profile1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profile1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pro1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(niknim1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        profile1Layout.setVerticalGroup(
            profile1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profile1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profile1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(niknim1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(profile1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(pro1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel7.setPreferredSize(new java.awt.Dimension(196, 35));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel8.setPreferredSize(new java.awt.Dimension(196, 35));

        exit1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        exit1.setForeground(new java.awt.Color(0, 51, 51));
        exit1.setText("Log Out");
        exit1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        exit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exit1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exit1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel9.setPreferredSize(new java.awt.Dimension(196, 35));

        cre1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cre1.setForeground(new java.awt.Color(0, 51, 51));
        cre1.setText("Create Quiz");
        cre1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cre1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cre1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cre1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cre1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel10.setPreferredSize(new java.awt.Dimension(196, 35));

        dashboard1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dashboard1.setForeground(new java.awt.Color(0, 51, 51));
        dashboard1.setText("Dashboard");
        dashboard1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        dashboard1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboard1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboard1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboard1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel11.setPreferredSize(new java.awt.Dimension(196, 35));

        acountaccess1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        acountaccess1.setForeground(new java.awt.Color(0, 51, 51));
        acountaccess1.setText("Account Access");
        acountaccess1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        acountaccess1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acountaccess1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(acountaccess1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(acountaccess1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel12.setPreferredSize(new java.awt.Dimension(196, 35));

        message1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        message1.setForeground(new java.awt.Color(0, 51, 51));
        message1.setText("Message");
        message1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        message1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                message1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(message1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(message1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout kGradientPanel5Layout = new javax.swing.GroupLayout(kGradientPanel5);
        kGradientPanel5.setLayout(kGradientPanel5Layout);
        kGradientPanel5Layout.setHorizontalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(profile1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(kGradientPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        kGradientPanel5Layout.setVerticalGroup(
            kGradientPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel5Layout.createSequentialGroup()
                .addComponent(profile1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        pnlcard1.setLayout(new java.awt.CardLayout());

        panel8.setkEndColor(new java.awt.Color(206, 92, 165));
        panel8.setkStartColor(new java.awt.Color(240, 122, 46));

        javax.swing.GroupLayout panel8Layout = new javax.swing.GroupLayout(panel8);
        panel8.setLayout(panel8Layout);
        panel8Layout.setHorizontalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
        );
        panel8Layout.setVerticalGroup(
            panel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        pnlcard1.add(panel8, "card5");

        panel6.setkEndColor(new java.awt.Color(206, 92, 165));
        panel6.setkStartColor(new java.awt.Color(240, 122, 46));

        javax.swing.GroupLayout panel6Layout = new javax.swing.GroupLayout(panel6);
        panel6.setLayout(panel6Layout);
        panel6Layout.setHorizontalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
        );
        panel6Layout.setVerticalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        pnlcard1.add(panel6, "card5");

        Create1.setkEndColor(new java.awt.Color(206, 92, 165));
        Create1.setkStartColor(new java.awt.Color(240, 122, 46));

        kGradientPanel6.setBackground(new java.awt.Color(255, 153, 51));
        kGradientPanel6.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        kGradientPanel6.setkEndColor(new java.awt.Color(240, 122, 46));
        kGradientPanel6.setkStartColor(new java.awt.Color(240, 122, 46));

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Time Left:");

        minute1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        minute1.setText("00");
        minute1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minute1ActionPerformed(evt);
            }
        });

        second1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        second1.setText("00");
        second1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                second1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel6Layout = new javax.swing.GroupLayout(kGradientPanel6);
        kGradientPanel6.setLayout(kGradientPanel6Layout);
        kGradientPanel6Layout.setHorizontalGroup(
            kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minute1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(second1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        kGradientPanel6Layout.setVerticalGroup(
            kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(minute1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(second1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        start1.setText("Start");
        start1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start1ActionPerformed(evt);
            }
        });

        stop1.setText("Stop");
        stop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stop1ActionPerformed(evt);
            }
        });

        createQuiz1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Questions", "Answers"
            }
        ));
        jScrollPane4.setViewportView(createQuiz1);

        add1.setText("Add");
        add1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add1ActionPerformed(evt);
            }
        });

        save1.setText("Save");
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });

        del3.setText("Delete");
        del3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del3ActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Student Progress:");

        searchques1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        find3.setText("Search");
        find3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Create1Layout = new javax.swing.GroupLayout(Create1);
        Create1.setLayout(Create1Layout);
        Create1Layout.setHorizontalGroup(
            Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Create1Layout.createSequentialGroup()
                .addGroup(Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Create1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Create1Layout.createSequentialGroup()
                                .addGroup(Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(Create1Layout.createSequentialGroup()
                                        .addComponent(start1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(stop1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(113, 113, 113))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Create1Layout.createSequentialGroup()
                                        .addComponent(kGradientPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Create1Layout.createSequentialGroup()
                                        .addComponent(searchques1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(find3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(add1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(del3))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Create1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(studentProg1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Create1Layout.createSequentialGroup()
                        .addGap(314, 314, 314)
                        .addComponent(save1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        Create1Layout.setVerticalGroup(
            Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Create1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Create1Layout.createSequentialGroup()
                        .addComponent(kGradientPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stop1)
                            .addComponent(start1)))
                    .addGroup(Create1Layout.createSequentialGroup()
                        .addGroup(Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(studentProg1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(32, 32, 32)
                        .addGroup(Create1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add1)
                            .addComponent(del3)
                            .addComponent(searchques1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(find3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(save1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        pnlcard1.add(Create1, "card5");

        mes1.setkEndColor(new java.awt.Color(206, 92, 165));
        mes1.setkStartColor(new java.awt.Color(240, 122, 46));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Say Something...");
        jTextArea2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea2MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTextArea2);

        send1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        send1.setForeground(new java.awt.Color(0, 51, 51));
        send1.setText("send");
        send1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send1ActionPerformed(evt);
            }
        });

        chats1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Messages"
            }
        ));
        jScrollPane6.setViewportView(chats1);

        delete1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        delete1.setForeground(new java.awt.Color(0, 51, 51));
        delete1.setText("delete");
        delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete1ActionPerformed(evt);
            }
        });

        search1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        search1.setForeground(new java.awt.Color(0, 51, 51));
        search1.setText("search");
        search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mes1Layout = new javax.swing.GroupLayout(mes1);
        mes1.setLayout(mes1Layout);
        mes1Layout.setHorizontalGroup(
            mes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mes1Layout.createSequentialGroup()
                .addGroup(mes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6)
                    .addGroup(mes1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(search1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(find1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mes1Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(send1, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)))
                .addGap(6, 6, 6))
        );
        mes1Layout.setVerticalGroup(
            mes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mes1Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(mes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(find1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mes1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(send1, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        pnlcard1.add(mes1, "card5");

        javax.swing.GroupLayout kGradientPanel4Layout = new javax.swing.GroupLayout(kGradientPanel4);
        kGradientPanel4.setLayout(kGradientPanel4Layout);
        kGradientPanel4Layout.setHorizontalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel4Layout.createSequentialGroup()
                .addComponent(kGradientPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlcard1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel4Layout.setVerticalGroup(
            kGradientPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlcard1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        kGradientPanel1.setBackground(new java.awt.Color(0, 153, 153));
        kGradientPanel1.setkEndColor(new java.awt.Color(206, 92, 165));
        kGradientPanel1.setkStartColor(new java.awt.Color(240, 122, 46));

        kGradientPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        kGradientPanel2.setkEndColor(new java.awt.Color(206, 92, 165));
        kGradientPanel2.setkStartColor(new java.awt.Color(29, 0, 71));

        profile.setBackground(new java.awt.Color(127, 51, 123));
        profile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        niknim.setForeground(new java.awt.Color(255, 255, 255));
        niknim.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        niknim.setText("username");
        niknim.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                niknimAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        pro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quizapplication/profile.gif"))); // NOI18N

        javax.swing.GroupLayout profileLayout = new javax.swing.GroupLayout(profile);
        profile.setLayout(profileLayout);
        profileLayout.setHorizontalGroup(
            profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, profileLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pro, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(niknim, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        profileLayout.setVerticalGroup(
            profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(profileLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(profileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(niknim, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(profileLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(pro, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(196, 35));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 33, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setPreferredSize(new java.awt.Dimension(196, 35));

        exit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        exit.setForeground(new java.awt.Color(0, 51, 51));
        exit.setText("Log Out");
        exit.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setPreferredSize(new java.awt.Dimension(196, 35));

        cre.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cre.setForeground(new java.awt.Color(0, 51, 51));
        cre.setText("Create Quiz");
        cre.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cre, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setPreferredSize(new java.awt.Dimension(196, 35));

        dashboard.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dashboard.setForeground(new java.awt.Color(0, 51, 51));
        dashboard.setText("Dashboard");
        dashboard.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        dashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dashboard, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setPreferredSize(new java.awt.Dimension(196, 35));

        acountaccess.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        acountaccess.setForeground(new java.awt.Color(0, 51, 51));
        acountaccess.setText("Account Access");
        acountaccess.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        acountaccess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acountaccessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(acountaccess, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(acountaccess, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel6.setPreferredSize(new java.awt.Dimension(196, 35));

        message.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        message.setForeground(new java.awt.Color(0, 51, 51));
        message.setText("Message");
        message.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        message.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(profile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addComponent(profile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );

        pnlcard.setLayout(new java.awt.CardLayout());

        panel7.setkEndColor(new java.awt.Color(206, 92, 165));
        panel7.setkStartColor(new java.awt.Color(240, 122, 46));

        javax.swing.GroupLayout panel7Layout = new javax.swing.GroupLayout(panel7);
        panel7.setLayout(panel7Layout);
        panel7Layout.setHorizontalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
        );
        panel7Layout.setVerticalGroup(
            panel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        pnlcard.add(panel7, "card5");

        panel5.setkEndColor(new java.awt.Color(206, 92, 165));
        panel5.setkStartColor(new java.awt.Color(240, 122, 46));

        javax.swing.GroupLayout panel5Layout = new javax.swing.GroupLayout(panel5);
        panel5.setLayout(panel5Layout);
        panel5Layout.setHorizontalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
        );
        panel5Layout.setVerticalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 550, Short.MAX_VALUE)
        );

        pnlcard.add(panel5, "card5");

        Create.setkEndColor(new java.awt.Color(206, 92, 165));
        Create.setkStartColor(new java.awt.Color(240, 122, 46));

        kGradientPanel3.setBackground(new java.awt.Color(255, 153, 51));
        kGradientPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        kGradientPanel3.setkEndColor(new java.awt.Color(240, 122, 46));
        kGradientPanel3.setkStartColor(new java.awt.Color(240, 122, 46));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Time Left:");

        minute.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        minute.setText("00");
        minute.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minuteMouseClicked(evt);
            }
        });
        minute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minuteActionPerformed(evt);
            }
        });

        second.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        second.setText("00");
        second.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                secondMouseClicked(evt);
            }
        });
        second.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel3Layout = new javax.swing.GroupLayout(kGradientPanel3);
        kGradientPanel3.setLayout(kGradientPanel3Layout);
        kGradientPanel3Layout.setHorizontalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(minute, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        kGradientPanel3Layout.setVerticalGroup(
            kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(minute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(second, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        stop.setText("Stop");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        createQuiz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Questions", "Answers", "Difficulty"
            }
        ));
        jScrollPane3.setViewportView(createQuiz);

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        finalize.setText("Finalized");
        finalize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finalizeActionPerformed(evt);
            }
        });

        del2.setText("Delete");
        del2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                del2ActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Student Progress:");

        searchques.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        find2.setText("Search");
        find2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                find2ActionPerformed(evt);
            }
        });

        create1.setText("Save");
        create1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                create1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreateLayout = new javax.swing.GroupLayout(Create);
        Create.setLayout(CreateLayout);
        CreateLayout.setHorizontalGroup(
            CreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreateLayout.createSequentialGroup()
                .addGap(146, 146, 146)
                .addComponent(create1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(finalize, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(164, 164, 164))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreateLayout.createSequentialGroup()
                .addGroup(CreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CreateLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchques, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(find2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(del2))
                    .addGroup(CreateLayout.createSequentialGroup()
                        .addGroup(CreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CreateLayout.createSequentialGroup()
                                .addContainerGap(47, Short.MAX_VALUE)
                                .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(stop, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83))
                            .addGroup(CreateLayout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(studentProg, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        CreateLayout.setVerticalGroup(
            CreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CreateLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(CreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateLayout.createSequentialGroup()
                        .addComponent(kGradientPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(CreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(stop)
                            .addComponent(start)))
                    .addGroup(CreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(studentProg, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addGap(8, 8, 8)
                .addGroup(CreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchques, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(find2)
                    .addComponent(add)
                    .addComponent(del2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CreateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(finalize, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(create1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        CreateLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {start, stop});

        pnlcard.add(Create, "card5");

        mes.setkEndColor(new java.awt.Color(206, 92, 165));
        mes.setkStartColor(new java.awt.Color(240, 122, 46));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Say Something...");
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        send.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        send.setForeground(new java.awt.Color(0, 51, 51));
        send.setText("send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        chats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Messages"
            }
        ));
        jScrollPane2.setViewportView(chats);

        delete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(0, 51, 51));
        delete.setText("delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        search.setForeground(new java.awt.Color(0, 51, 51));
        search.setText("search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mesLayout = new javax.swing.GroupLayout(mes);
        mes.setLayout(mesLayout);
        mesLayout.setHorizontalGroup(
            mesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mesLayout.createSequentialGroup()
                .addGroup(mesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(mesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mesLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(send, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)))
                .addGap(6, 6, 6))
        );
        mesLayout.setVerticalGroup(
            mesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mesLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(mesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(find, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(mesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(send, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        pnlcard.add(mes, "card5");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlcard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlcard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        loadQuizData();
        loadMessages();

    }//GEN-LAST:event_formWindowOpened

    private void messageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageActionPerformed
        pnlcard.removeAll();
        pnlcard.add(mes);
        pnlcard.repaint();
        pnlcard.revalidate();
    }//GEN-LAST:event_messageActionPerformed

    private void niknimAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_niknimAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_niknimAncestorAdded

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String keyword = find.getText().trim();
        if (keyword.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a keyword to search.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        StringBuilder searchResults = new StringBuilder("Search Results:\n\n");
        boolean found = false;

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            String message = (String) tableModel.getValueAt(i, 1); // Get the message column
            if (message.contains(keyword)) {
                found = true;
                searchResults.append("- ").append(message).append("\n");
            }
        }

        if (found) {
            JOptionPane.showMessageDialog(this, searchResults.toString(), "Search Results", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "No messages found with the given keyword.", "Search Results", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_searchActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int selectedRow = chats.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a message to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Get the sender and message of the selected row
        String sender = (String) tableModel.getValueAt(selectedRow, 0);
        String message = (String) tableModel.getValueAt(selectedRow, 1);

        // Remove the row from the JTable
        tableModel.removeRow(selectedRow);

        // Update the JSON file
        File file = new File(FILEPATH);
        if (!file.exists()) {
            JOptionPane.showMessageDialog(this, "Message file not found!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (FileReader reader = new FileReader(file)) {
            JSONObject chatData = (JSONObject) new JSONParser().parse(reader);

            // Get the appropriate message array (teacher or student)
            String key = "teacher".equalsIgnoreCase(sender) ? "teacher" : "student";
            JSONArray messages = (JSONArray) chatData.getOrDefault(key, new JSONArray());

            // Find and remove the message from the array
            for (int i = 0; i < messages.size(); i++) {
                JSONObject msgObj = (JSONObject) messages.get(i);
                if (message.equals(msgObj.get("message"))) {
                    messages.remove(i);
                    break;
                }
            }

            // Save the updated JSON data back to the file
            chatData.put(key, messages);
            try (FileWriter writer = new FileWriter(file)) {
                writer.write(chatData.toJSONString());
            }

        } catch (IOException | ParseException e) {
            JOptionPane.showMessageDialog(this, "Error updating messages: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        String message = jTextArea1.getText().trim();
        if (message.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Message cannot be empty.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        appendMessage("Teacher", message); // Save to JSON file
        tableModel.addRow(new Object[]{"Teacher", message}); // Add to JTable
        jTextArea1.setText(""); // Clear the text area

    }//GEN-LAST:event_sendActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        log lo = new log();
        lo.pack();
        lo.setLocationRelativeTo(null);
        lo.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        if (timerRunning) {
            JOptionPane.showMessageDialog(this, "Timer is already running.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Get user input for minutes and seconds
        try {
            String minuteInput = minute.getText().trim();
            String secondInput = second.getText().trim();

            // Ensure the input fields are not empty
            if (minuteInput.isEmpty() || secondInput.isEmpty()) {
                throw new NumberFormatException("Input fields cannot be empty.");
            }

            // Parse the input values
            countdownMinutes = Integer.parseInt(minuteInput);
            countdownSeconds = Integer.parseInt(secondInput);

            // Validate the input values
            if (countdownMinutes < 0) {
                throw new NumberFormatException("Minutes must be greater than or equal to 0.");
            }
            if (countdownSeconds < 0 || countdownSeconds >= 60) {
                throw new NumberFormatException("Seconds must be between 0 and 59.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter valid minutes and seconds (e.g., minutes >= 0, seconds < 60).", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        timerRunning = true;
        timer = new Timer();

        TimerTask task = new TimerTask() {
            @Override
            public void run() {
                if (countdownSeconds == 0) {
                    if (countdownMinutes == 0) {
                        timer.cancel(); // Stop the timer
                        timerRunning = false; // Reset the timer state
                        SwingUtilities.invokeLater(() -> {
                            JOptionPane.showMessageDialog(adminPanels.this, "Time's up!", "Timer", JOptionPane.INFORMATION_MESSAGE);
                        });
                        return;
                    }
                    countdownMinutes--;
                    countdownSeconds = 59;
                } else {
                    countdownSeconds--;
                }

                // Update the UI in admin panel
                SwingUtilities.invokeLater(() -> {
                    minute.setText(String.format("%02d", countdownMinutes));
                    second.setText(String.format("%02d", countdownSeconds));
                });

                // Update the student panel timer
                synchronized (studentPanels.class) {
                    studentPanels.updateTimer(countdownMinutes, countdownSeconds);
                }
            }
        };

        timer.scheduleAtFixedRate(task, 0, 1000);

    }//GEN-LAST:event_startActionPerformed

    private void minuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minuteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minuteActionPerformed

    private void secondActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_secondActionPerformed

    private void finalizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finalizeActionPerformed
        finalizeQuiz();
    }//GEN-LAST:event_finalizeActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        if (!timerRunning) {
            JOptionPane.showMessageDialog(this, "No timer is running.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        timer.cancel();
        timerRunning = false; // Reset the timer state
        JOptionPane.showMessageDialog(this, "Timer stopped.", "Timer", JOptionPane.INFORMATION_MESSAGE);


    }//GEN-LAST:event_stopActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        saveMessages();
        saveQuizData();
    }//GEN-LAST:event_formWindowClosed

    private void jTextArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseClicked
        jTextArea1.setText("");
    }//GEN-LAST:event_jTextArea1MouseClicked

    private void creActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creActionPerformed
        pnlcard.removeAll();
        pnlcard.add(Create);
        pnlcard.repaint();
        pnlcard.revalidate();
    }//GEN-LAST:event_creActionPerformed

    private void dashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dashboardActionPerformed

    private void acountaccessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acountaccessActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acountaccessActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if (isQuizFinalized) {
            JOptionPane.showMessageDialog(this, "Cannot add questions after the quiz is finalized!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String category = JOptionPane.showInputDialog(this, "Enter the Category:");
        String question = JOptionPane.showInputDialog(this, "Enter the Question:");
        String answer = JOptionPane.showInputDialog(this, "Enter the Answer:");
        String difficulty = JOptionPane.showInputDialog(this, "Enter the Difficulty (easy/medium/hard):");
        String pointsStr = JOptionPane.showInputDialog(this, "Enter the Points:");

        if (category == null || category.trim().isEmpty()
                || question == null || question.trim().isEmpty()
                || answer == null || answer.trim().isEmpty()
                || difficulty == null || difficulty.trim().isEmpty()
                || pointsStr == null || pointsStr.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "All fields are required!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int points = Integer.parseInt(pointsStr);
            if (points < 0) {
                JOptionPane.showMessageDialog(this, "Points must be a non-negative integer!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            quizTableModel.addRow(new Object[]{category.trim(), question.trim(), answer.trim(), difficulty.trim(), points});
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Points must be a valid integer!", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_addActionPerformed

    private void del2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del2ActionPerformed
        if (isQuizFinalized) {
            JOptionPane.showMessageDialog(this, "Cannot delete questions after the quiz is finalized!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int selectedRow = createQuiz.getSelectedRow();
        if (selectedRow != -1) {
            quizTableModel.removeRow(selectedRow);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a question to delete!", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_del2ActionPerformed

    private void find2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find2ActionPerformed
        searchQuestion();
    }//GEN-LAST:event_find2ActionPerformed

    private void niknim1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_niknim1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_niknim1AncestorAdded

    private void exit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exit1ActionPerformed

    private void cre1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cre1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cre1ActionPerformed

    private void dashboard1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboard1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dashboard1ActionPerformed

    private void acountaccess1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acountaccess1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acountaccess1ActionPerformed

    private void message1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_message1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_message1ActionPerformed

    private void minute1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minute1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minute1ActionPerformed

    private void second1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_second1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_second1ActionPerformed

    private void start1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_start1ActionPerformed

    private void stop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stop1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stop1ActionPerformed

    private void add1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_add1ActionPerformed

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_save1ActionPerformed

    private void del3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_del3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_del3ActionPerformed

    private void find3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_find3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_find3ActionPerformed

    private void jTextArea2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextArea2MouseClicked

    private void send1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_send1ActionPerformed

    private void delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete1ActionPerformed

    private void search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_search1ActionPerformed

    private void jFrame1formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jFrame1formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFrame1formWindowClosed

    private void jFrame1formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jFrame1formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_jFrame1formWindowOpened

    private void minuteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minuteMouseClicked
        minute.setText("");
    }//GEN-LAST:event_minuteMouseClicked

    private void secondMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_secondMouseClicked
        second.setText("");
    }//GEN-LAST:event_secondMouseClicked

    private void create1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_create1ActionPerformed
        saveQuizData();
    }//GEN-LAST:event_create1ActionPerformed

    private void searchQuestion() {
        // Get the keyword from the searchques JTextField
        String searchText = searchques.getText().trim();
        if (searchText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter a keyword to search!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean found = false;

        for (int i = 0; i < createQuiz.getRowCount(); i++) {
            String question = createQuiz.getValueAt(i, 1).toString().toLowerCase();
            if (question.contains(searchText.toLowerCase())) {
                createQuiz.setRowSelectionInterval(i, i);
                found = true;

                String category = createQuiz.getValueAt(i, 0).toString();
                String matchedQuestion = createQuiz.getValueAt(i, 1).toString();
                String answer = createQuiz.getValueAt(i, 2).toString();
                String difficulty = createQuiz.getValueAt(i, 3).toString();
                String points = createQuiz.getValueAt(i, 4).toString();

                String message = String.format(
                        "<html><b>Question Details:</b><br><br>"
                        + "<b>Category:</b> %s<br>"
                        + "<b>Question:</b> %s<br>"
                        + "<b>Answer:</b> %s<br>"
                        + "<b>Difficulty:</b> %s<br>"
                        + "<b>Points:</b> %s</html>",
                        category, matchedQuestion, answer, difficulty, points
                );

                JOptionPane.showMessageDialog(this, message, "Search Result", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }

        if (!found) {
            JOptionPane.showMessageDialog(this, "No matching question found!", "Search Result", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void finalizeQuiz() {
        isQuizFinalized = true;
        add.setEnabled(false);
        del2.setEnabled(false);
        create1.setEnabled(false);
        JOptionPane.showMessageDialog(this, "Quiz finalized! No further modifications allowed.", "Finalized", JOptionPane.INFORMATION_MESSAGE);
    }

    private void saveQuizData() {
         JSONArray quizArray = new JSONArray();

        for (int i = 0; i < quizTableModel.getRowCount(); i++) {
            JSONObject questionObj = new JSONObject();
            questionObj.put("category", quizTableModel.getValueAt(i, 0));
            questionObj.put("question", quizTableModel.getValueAt(i, 1));
            questionObj.put("answer", quizTableModel.getValueAt(i, 2));
            questionObj.put("points", quizTableModel.getValueAt(i, 3));
            quizArray.add(questionObj);
        }

        try (FileWriter writer = new FileWriter(quizfile)) {
            writer.write(quizArray.toJSONString());
            JOptionPane.showMessageDialog(this, "Quiz data saved successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving quiz data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadQuizData() {
        File file = new File(quizfile);
    if (!file.exists()) {
        JOptionPane.showMessageDialog(this, "Quiz file not found! Please create a quiz first.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try (FileReader reader = new FileReader(file)) {
        JSONParser parser = new JSONParser();
        JSONObject quizData = (JSONObject) parser.parse(reader);

        // Ensure the "quiz" key exists and is a JSONArray
        if (!quizData.containsKey("quiz") || !(quizData.get("quiz") instanceof JSONArray)) {
            JOptionPane.showMessageDialog(this, "Invalid quiz file format! Ensure 'quiz' is an array.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        JSONArray quizArray = (JSONArray) quizData.get("quiz");
        tableModel.setRowCount(0); // Clear existing table data

        for (Object obj : quizArray) {
            if (!(obj instanceof JSONObject)) {
                JOptionPane.showMessageDialog(this, "Invalid question format in quiz file!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            JSONObject questionObj = (JSONObject) obj;

            // Fetch the fields from JSON, handle case sensitivity
            String category = (String) questionObj.getOrDefault("category", "Unknown");
            String question = (String) questionObj.getOrDefault("question", "No Question");
            String answer = (String) questionObj.getOrDefault("answer", "No Answer");
            String difficulty = (String) questionObj.getOrDefault("difficulty", "Unknown");
            long points = (long) questionObj.getOrDefault("Points", 0);

            // Add the row to the table
            tableModel.addRow(new Object[]{category, question, answer, difficulty, points});
        }
    } catch (IOException | ParseException e) {
        JOptionPane.showMessageDialog(this, "Error loading quiz data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        e.printStackTrace();
    }
}

    private void startMessageUpdater() {
        messageUpdateTimer = new Timer();
        messageUpdateTimer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                SwingUtilities.invokeLater(() -> updateMessagesInRealTime());
            }
        }, 0, 2000); // Check every 2 seconds
    }

    private synchronized void updateMessagesInRealTime() {
        File file = new File(FILEPATH);
        if (!file.exists()) {
            return;
        }

        try (FileReader reader = new FileReader(file)) {
            JSONObject chatData = (JSONObject) new JSONParser().parse(reader);

            // Fetch teacher and student messages
            JSONArray teacherMessages = (JSONArray) chatData.getOrDefault("teacher", new JSONArray());
            JSONArray studentMessages = (JSONArray) chatData.getOrDefault("student", new JSONArray());

            int totalMessages = teacherMessages.size() + studentMessages.size();

            // Only proceed if there are new messages
            if (totalMessages > lastDisplayedMessageCount) {

                // Clear and reload the JTable
                tableModel.setRowCount(0);

                // Reload teacher and student messages alternately
                int teacherIndex = 0;
                int studentIndex = 0;

                while (teacherIndex < teacherMessages.size() || studentIndex < studentMessages.size()) {
                    if (teacherIndex < teacherMessages.size()) {
                        JSONObject teacherMessage = (JSONObject) teacherMessages.get(teacherIndex);
                        tableModel.addRow(new Object[]{"Teacher", teacherMessage.get("message")});
                        teacherIndex++;
                    }
                    if (studentIndex < studentMessages.size()) {
                        JSONObject studentMessage = (JSONObject) studentMessages.get(studentIndex);
                        tableModel.addRow(new Object[]{"Student", studentMessage.get("message")});
                        studentIndex++;
                    }
                }

                // Update the last displayed message count
                lastDisplayedMessageCount = totalMessages;
            }

        } catch (IOException | ParseException e) {
            JOptionPane.showMessageDialog(this, "Error updating messages: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private synchronized void appendMessage(String sender, String message) {
        File file = new File(FILEPATH);
        JSONObject chatData = new JSONObject();

        try (FileReader reader = new FileReader(file)) {
            chatData = (JSONObject) new JSONParser().parse(reader);
        } catch (IOException | ParseException e) {
            // Log error but proceed to create a new JSON object
        }

        JSONArray messages = (JSONArray) chatData.getOrDefault("messages", new JSONArray());
        JSONObject newMessage = new JSONObject();
        newMessage.put("sender", sender);
        newMessage.put("message", message);
        messages.add(newMessage);
        chatData.put("messages", messages);

        chatData.put(sender.equals("Teacher") ? "teacher" : "student", messages);

        // Save the updated JSON data back to the file
        try (FileWriter writer = new FileWriter(file)) {
            writer.write(chatData.toJSONString());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving message: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadMessages() {
        // Ensure tableModel is properly initialized
        if (tableModel == null) {
            tableModel = new DefaultTableModel(new Object[][]{}, new String[]{"Sender", "Message"});
            chats.setModel(tableModel); // Attach it to the JTable
        }

        File file = new File(FILEPATH);
        if (!file.exists()) {
            JOptionPane.showMessageDialog(this, "Chat file not found!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try (FileReader reader = new FileReader(file)) {
            JSONParser parser = new JSONParser();
            JSONObject chatData = (JSONObject) parser.parse(reader);

            JSONArray teacherMessages = (JSONArray) chatData.getOrDefault("teacher", new JSONArray());
            JSONArray studentMessages = (JSONArray) chatData.getOrDefault("student", new JSONArray());

            // Clear existing rows
            tableModel.setRowCount(0);

            // Populate the JTable
            for (Object obj : teacherMessages) {
                JSONObject messageObj = (JSONObject) obj;
                tableModel.addRow(new Object[]{"Teacher", messageObj.get("message")});
            }
            for (Object obj : studentMessages) {
                JSONObject messageObj = (JSONObject) obj;
                tableModel.addRow(new Object[]{"Student", messageObj.get("message")});
            }
        } catch (IOException | ParseException e) {
            JOptionPane.showMessageDialog(this, "Error loading messages: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void saveMessages() {
        File file = new File(FILEPATH);
        JSONObject chatData = new JSONObject();

        // Retrieve existing data
        try (FileReader reader = new FileReader(file)) {
            chatData = (JSONObject) new JSONParser().parse(reader);
        } catch (IOException | ParseException e) {
            // Log error but proceed to save new messages
        }

        // Separate teacher and student messages
        JSONArray teacherMessages = (JSONArray) chatData.getOrDefault("teacher", new JSONArray());
        JSONArray studentMessages = new JSONArray();

        for (int i = 0; i < tableModel.getRowCount(); i++) {
            String sender = (String) tableModel.getValueAt(i, 0);
            String message = (String) tableModel.getValueAt(i, 1);

            JSONObject messageObject = new JSONObject();
            messageObject.put("message", message);

            if ("Teacher".equals(sender)) {
                teacherMessages.add(messageObject);
            } else if ("Student".equals(sender)) {
                studentMessages.add(messageObject);
            }
        }

        // Save teacher and student messages back to JSON
        chatData.put("teacher", teacherMessages);
        chatData.put("student", studentMessages);

        try (FileWriter writer = new FileWriter(file)) {
            writer.write(chatData.toJSONString());
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving messages: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private synchronized void sendMessage(String message) {
        File file = new File(FILEPATH);
        JSONObject chatData;

        try {
            // Read the existing data
            if (file.exists()) {
                try (FileReader reader = new FileReader(file)) {
                    chatData = (JSONObject) new JSONParser().parse(reader);
                } catch (ParseException e) {
                    chatData = new JSONObject(); // Start fresh if parsing fails
                }
            } else {
                chatData = new JSONObject(); // Start fresh if file doesn't exist
            }

            // Fetch or create the teacher message array
            JSONArray teacherMessages = (JSONArray) chatData.getOrDefault("teacher", new JSONArray());

            // Append the new message
            JSONObject newMessage = new JSONObject();
            newMessage.put("message", message);
            teacherMessages.add(newMessage);

            // Update the data
            chatData.put("teacher", teacherMessages);

            // Write the updated data back to the file
            try (FileWriter writer = new FileWriter(file)) {
                writer.write(chatData.toJSONString());
                writer.flush();
            }

            // Update the table
            tableModel.addRow(new Object[]{"Teacher", message});

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error sending message: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(() -> {
            adminPanels log1 = new adminPanels();
            log1.setVisible(true);
            log1.pack();
            log1.setLocationRelativeTo(null);

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KGradientPanel Create;
    private keeptoo.KGradientPanel Create1;
    private javax.swing.JButton acountaccess;
    private javax.swing.JButton acountaccess1;
    private javax.swing.JButton add;
    private javax.swing.JButton add1;
    private javax.swing.JTable chats;
    private javax.swing.JTable chats1;
    private javax.swing.JButton cre;
    private javax.swing.JButton cre1;
    private javax.swing.JButton create1;
    private javax.swing.JTable createQuiz;
    private javax.swing.JTable createQuiz1;
    private javax.swing.JButton dashboard;
    private javax.swing.JButton dashboard1;
    private javax.swing.JButton del2;
    private javax.swing.JButton del3;
    private javax.swing.JButton delete;
    private javax.swing.JButton delete1;
    private javax.swing.JButton exit;
    private javax.swing.JButton exit1;
    private javax.swing.JButton finalize;
    private javax.swing.JTextField find;
    private javax.swing.JTextField find1;
    private javax.swing.JButton find2;
    private javax.swing.JButton find3;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private keeptoo.KGradientPanel kGradientPanel5;
    private keeptoo.KGradientPanel kGradientPanel6;
    private keeptoo.KGradientPanel mes;
    private keeptoo.KGradientPanel mes1;
    private javax.swing.JButton message;
    private javax.swing.JButton message1;
    private javax.swing.JTextField minute;
    private javax.swing.JTextField minute1;
    private javax.swing.JLabel niknim;
    private javax.swing.JLabel niknim1;
    private keeptoo.KGradientPanel panel5;
    private keeptoo.KGradientPanel panel6;
    private keeptoo.KGradientPanel panel7;
    private keeptoo.KGradientPanel panel8;
    private keeptoo.KGradientPanel pnlcard;
    private keeptoo.KGradientPanel pnlcard1;
    private javax.swing.JPanel profile;
    private javax.swing.JPanel profile1;
    private javax.swing.JButton save1;
    private javax.swing.JButton search;
    private javax.swing.JButton search1;
    private javax.swing.JTextField searchques;
    private javax.swing.JTextField searchques1;
    private javax.swing.JTextField second;
    private javax.swing.JTextField second1;
    private javax.swing.JButton send;
    private javax.swing.JButton send1;
    private javax.swing.JButton start;
    private javax.swing.JButton start1;
    private javax.swing.JButton stop;
    private javax.swing.JButton stop1;
    private javax.swing.JProgressBar studentProg;
    private javax.swing.JProgressBar studentProg1;
    // End of variables declaration//GEN-END:variables
}
